import{_ as r,C as o,c as p,o as h,j as a,aA as n,a as t,G as e,w as l}from"./chunks/framework.dIpQmRHt.js";const R=JSON.parse('{"title":"JavaRNG","description":"","frontmatter":{},"headers":[],"relativePath":"api/JavaRNG.md","filePath":"api/JavaRNG.md","lastUpdated":null}'),d={name:"api/JavaRNG.md"},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function E(y,s,v,C,T,f){const i=o("Badge");return h(),p("div",null,[s[24]||(s[24]=a("h1",{id:"javarng",tabindex:"-1"},[t("JavaRNG "),a("a",{class:"header-anchor",href:"#javarng","aria-label":'Permalink to "JavaRNG"'},"â€‹")],-1)),a("details",k,[a("summary",null,[s[0]||(s[0]=a("a",{id:"Cubiomes.JavaRNG",href:"#Cubiomes.JavaRNG"},[a("span",{class:"jlbinding"},"Cubiomes.JavaRNG")],-1)),s[1]||(s[1]=t()),e(i,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[3]||(s[3]=n('<p>A module that mimics the behavior of Java&#39;s random number generators in Julia. Only the functionalities needed by the Minecraft Java Edition are implemented.</p><p>The rngs implemented are:</p><ul><li><p><a href="/Cubiomes.jl/v0.1.3/api/JavaRNG#Cubiomes.JavaRNG.JavaRandom"><code>JavaRandom</code></a> for the <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Random.html" target="_blank" rel="noreferrer"><code>java.util.Random</code></a> class.</p></li><li><p><a href="/Cubiomes.jl/v0.1.3/api/JavaRNG#Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus"><code>JavaXoroshiro128PlusPlus</code></a> for the <a href="http://prng.di.unimi.it/xoshiro128plusplus.c" target="_blank" rel="noreferrer"><code>Xoroshiro128PlusPlus</code></a> PRNG.</p></li></ul><p>Only the [<code>nextðŸŽ²</code>] function is used to get random numbers. Instead of <code>nextDouble</code> or <code>nextInt</code> in Java, use <code>nextðŸŽ²(rng, Float64)</code> or <code>nextðŸŽ²(rng, Int32)</code> respectively.</p>',4)),e(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[2]||(s[2]=[a("a",{href:"https://github.com/arnaud-ma/Cubiomes.jl/blob/e1a3022a9b6d801308c9afa942fed11a2529c7a6/src/rng.jl#L2-L12",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[25]||(s[25]=n('<h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">â€‹</a></h2><ul><li><a href="#Cubiomes.JavaRNG.JavaRandom"><code>Cubiomes.JavaRNG.JavaRandom</code></a></li><li><a href="#Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus"><code>Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus</code></a></li><li><a href="#Cubiomes.JavaRNG.nextðŸŽ²-Union{Tuple{T}, Tuple{T, Any}} where T&lt;:Cubiomes.JavaRNG.AbstractJavaRNG"><code>Cubiomes.JavaRNG.nextðŸŽ²</code></a></li><li><a href="#Cubiomes.JavaRNG.randjumpðŸŽ²-Union{Tuple{T}, Tuple{T, Any, Integer}} where T&lt;:Cubiomes.JavaRNG.AbstractJavaRNG"><code>Cubiomes.JavaRNG.randjumpðŸŽ²</code></a></li><li><a href="#Cubiomes.JavaRNG.set_seedðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, Any, Vararg{Any}}"><code>Cubiomes.JavaRNG.set_seedðŸŽ²</code></a></li></ul><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">â€‹</a></h2>',3)),a("details",u,[a("summary",null,[s[4]||(s[4]=a("a",{id:"Cubiomes.JavaRNG.JavaRandom",href:"#Cubiomes.JavaRNG.JavaRandom"},[a("span",{class:"jlbinding"},"Cubiomes.JavaRNG.JavaRandom")],-1)),s[5]||(s[5]=t()),e(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A pseudorandom number generator that mimics the behavior of Java&#39;s <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Random.html" target="_blank" rel="noreferrer"><code>java.util.Random</code></a> class.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JavaRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1234</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000005deece2bf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> next_int32_range!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span></code></pre></div>`,4)),e(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[6]||(s[6]=[a("a",{href:"https://github.com/arnaud-ma/Cubiomes.jl/blob/e1a3022a9b6d801308c9afa942fed11a2529c7a6/src/rng.jl#L70-L85",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",g,[a("summary",null,[s[8]||(s[8]=a("a",{id:"Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus",href:"#Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus"},[a("span",{class:"jlbinding"},"Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus")],-1)),s[9]||(s[9]=t()),e(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaXoroshiro128PlusPlus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UInt64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UInt64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaXoroshiro128PlusPlus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A pseudo-random number generator that mimics the behavior of Java&#39;s implementation of <a href="http://prng.di.unimi.it/xoshiro128plusplus.c" target="_blank" rel="noreferrer"><code>Xoroshiro128PlusPlus</code></a> PRNG.</p>`,2)),e(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[10]||(s[10]=[a("a",{href:"https://github.com/arnaud-ma/Cubiomes.jl/blob/e1a3022a9b6d801308c9afa942fed11a2529c7a6/src/rng.jl#L176-L182",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",b,[a("summary",null,[s[12]||(s[12]=a("a",{id:"Cubiomes.JavaRNG.nextðŸŽ²-Union{Tuple{T}, Tuple{T, Any}} where T<:Cubiomes.JavaRNG.AbstractJavaRNG",href:"#Cubiomes.JavaRNG.nextðŸŽ²-Union{Tuple{T}, Tuple{T, Any}} where T<:Cubiomes.JavaRNG.AbstractJavaRNG"},[a("span",{class:"jlbinding"},"Cubiomes.JavaRNG.nextðŸŽ²")],-1)),s[13]||(s[13]=t()),e(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nextðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nextðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stop) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nextðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, start, stop) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span></code></pre></div><p>Generate a random number of type <code>T</code> from the given random number generator. If <code>start</code> and <code>stop</code> are provided, the random number will be in the range <code>[start, stop]</code>. <code>start</code> is default to <code>0</code>.</p>`,2)),e(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[14]||(s[14]=[a("a",{href:"https://github.com/arnaud-ma/Cubiomes.jl/blob/e1a3022a9b6d801308c9afa942fed11a2529c7a6/src/rng.jl#L23-L30",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",m,[a("summary",null,[s[16]||(s[16]=a("a",{id:"Cubiomes.JavaRNG.randjumpðŸŽ²-Union{Tuple{T}, Tuple{T, Any, Integer}} where T<:Cubiomes.JavaRNG.AbstractJavaRNG",href:"#Cubiomes.JavaRNG.randjumpðŸŽ²-Union{Tuple{T}, Tuple{T, Any, Integer}} where T<:Cubiomes.JavaRNG.AbstractJavaRNG"},[a("span",{class:"jlbinding"},"Cubiomes.JavaRNG.randjumpðŸŽ²")],-1)),s[17]||(s[17]=t()),e(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randjumpðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span></code></pre></div><p>Jump the state of the random number generator <code>n</code> steps forward, without generating any random numbers.</p>',2)),e(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[18]||(s[18]=[a("a",{href:"https://github.com/arnaud-ma/Cubiomes.jl/blob/e1a3022a9b6d801308c9afa942fed11a2529c7a6/src/rng.jl#L33-L38",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",c,[a("summary",null,[s[20]||(s[20]=a("a",{id:"Cubiomes.JavaRNG.set_seedðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, Any, Vararg{Any}}",href:"#Cubiomes.JavaRNG.set_seedðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, Any, Vararg{Any}}"},[a("span",{class:"jlbinding"},"Cubiomes.JavaRNG.set_seedðŸŽ²")],-1)),s[21]||(s[21]=t()),e(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_seedðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, seed) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractJavaRNG</span></span></code></pre></div><p>Initialize the rng with the given seed. Return the rng itself for convenience.</p>',2)),e(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[22]||(s[22]=[a("a",{href:"https://github.com/arnaud-ma/Cubiomes.jl/blob/e1a3022a9b6d801308c9afa942fed11a2529c7a6/src/rng.jl#L43-L47",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[26]||(s[26]=a("h2",{id:"Private-API",tabindex:"-1"},[t("Private API "),a("a",{class:"header-anchor",href:"#Private-API","aria-label":'Permalink to "Private API {#Private-API}"'},"â€‹")],-1))])}const A=r(d,[["render",E]]);export{R as __pageData,A as default};
