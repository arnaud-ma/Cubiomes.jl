import{_ as p,C as r,c as n,o as l,j as e,az as a,a as i,G as o}from"./chunks/framework.DBkpLKmB.js";const H=JSON.parse('{"title":"Noises","description":"","frontmatter":{},"headers":[],"relativePath":"api/Noises.md","filePath":"api/Noises.md","lastUpdated":null}'),d={name:"api/Noises.md"},h={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},x={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},P={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"18.033ex",height:"2.09ex",role:"img",focusable:"false",viewBox:"0 -841.7 7970.5 923.7","aria-hidden":"true"},V={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.312ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.591ex",height:"1.819ex",role:"img",focusable:"false",viewBox:"0 -666 4239.1 804","aria-hidden":"true"};function S(D,s,I,B,L,M){const t=r("Badge");return l(),n("div",null,[s[68]||(s[68]=e("h1",{id:"noises",tabindex:"-1"},[i("Noises "),e("a",{class:"header-anchor",href:"#noises","aria-label":'Permalink to "Noises"'},"â€‹")],-1)),e("details",h,[e("summary",null,[s[0]||(s[0]=e("a",{id:"Cubiomes.Noises",href:"#Cubiomes.Noises"},[e("span",{class:"jlbinding"},"Cubiomes.Noises")],-1)),s[1]||(s[1]=i()),o(t,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[2]||(s[2]=a('<div class="tip custom-block"><p class="custom-block-title">Note</p><p>Working over raw noise functions is very low-level and should only be used as a last resort or for performance reasons.</p></div><p>Noises is a module to generate and sample various types of noise functions used in the procedural generation of Minecraft worlds. The result are always floating, but the input can be any type of number.</p><p>A noise object can be quite big in memory, so we can create an undefined noise object and initialize it without copying it with the <code>set_rng!ðŸŽ²</code> function, saving time and memory.</p><p>The main uses are with the functions:</p><ul><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Noise"><code>Noise</code></a> : create an undefined noise object.</p></li><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.set_rng!ðŸŽ²"><code>set_rng!ðŸŽ²</code></a> : initialize the noise object.</p></li><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T&lt;:Cubiomes.Noises.Noise, N}"><code>NoiseðŸŽ²</code></a> : create and initialize the noise object in one step.</p></li><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_noise"><code>sample_noise</code></a> : sample the noise at a given point.</p></li></ul><p>The noises implemented are:</p><ul><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Perlin"><code>Perlin</code></a> : a Perlin noise.</p></li><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Octaves"><code>Octaves</code></a> : a sum of <code>N</code> Perlin noises.</p></li><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.DoublePerlin"><code>DoublePerlin</code></a> : a sum of two independent and identically distributed Octaves noises.</p></li></ul><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/Noises.jl#L2-L24" target="_blank" rel="noreferrer">source</a></p>',8))]),s[69]||(s[69]=a('<h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">â€‹</a></h2><ul><li><a href="#Cubiomes.Noises.DoublePerlin"><code>Cubiomes.Noises.DoublePerlin</code></a></li><li><a href="#Cubiomes.Noises.Noise"><code>Cubiomes.Noises.Noise</code></a></li><li><a href="#Cubiomes.Noises.Noise-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, UndefInitializer, Vararg{Any, N}}} where {T&lt;:Cubiomes.Noises.Noise, N}"><code>Cubiomes.Noises.Noise</code></a></li><li><a href="#Cubiomes.Noises.Octaves"><code>Cubiomes.Noises.Octaves</code></a></li><li><a href="#Cubiomes.Noises.Perlin"><code>Cubiomes.Noises.Perlin</code></a></li><li><a href="#Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T&lt;:Cubiomes.Noises.Noise, N}"><code>Cubiomes.Noises.NoiseðŸŽ²</code></a></li><li><a href="#Cubiomes.Noises.indexed_lerp-Tuple{Integer, Any, Any, Any}"><code>Cubiomes.Noises.indexed_lerp</code></a></li><li><a href="#Cubiomes.Noises.init_coord_values-Tuple{Any}"><code>Cubiomes.Noises.init_coord_values</code></a></li><li><a href="#Cubiomes.Noises.interpolate_perlin-Tuple{OffsetArrays.OffsetVector{UInt8, StaticArraysCore.MVector{257, UInt8}}, Vararg{Any, 9}}"><code>Cubiomes.Noises.interpolate_perlin</code></a></li><li><a href="#Cubiomes.Noises.is_undef"><code>Cubiomes.Noises.is_undef</code></a></li><li><a href="#Cubiomes.Noises.next_perlinðŸŽ²"><code>Cubiomes.Noises.next_perlinðŸŽ²</code></a></li><li><a href="#Cubiomes.Noises.sample_noise"><code>Cubiomes.Noises.sample_noise</code></a></li><li><a href="#Cubiomes.Noises.sample_simplex"><code>Cubiomes.Noises.sample_simplex</code></a></li><li><a href="#Cubiomes.Noises.set_rng!ðŸŽ²"><code>Cubiomes.Noises.set_rng!ðŸŽ²</code></a></li><li><a href="#Cubiomes.Noises.shuffle!ðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, OffsetArrays.OffsetVector{UInt8, StaticArraysCore.MVector{257, UInt8}}}"><code>Cubiomes.Noises.shuffle!ðŸŽ²</code></a></li><li><a href="#Cubiomes.Noises.simplex_gradient-NTuple{5, Any}"><code>Cubiomes.Noises.simplex_gradient</code></a></li><li><a href="#Cubiomes.Noises.smoothstep_perlin_unsafe-Tuple{Any}"><code>Cubiomes.Noises.smoothstep_perlin_unsafe</code></a></li><li><a href="#Cubiomes.Noises.unsafe_set_rng!ðŸŽ²"><code>Cubiomes.Noises.unsafe_set_rng!ðŸŽ²</code></a></li></ul><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">â€‹</a></h2>',3)),e("details",u,[e("summary",null,[s[3]||(s[3]=e("a",{id:"Cubiomes.Noises.DoublePerlin",href:"#Cubiomes.Noises.DoublePerlin"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.DoublePerlin")],-1)),s[4]||(s[4]=i()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DoublePerlin{N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Noise</span></span></code></pre></div><p>A double Perlin noise implementation. It&#39;s a sum of two independent and identically distributed (iid) Octaves{N} noise.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/double_perlin.jl#L9-L14" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",k,[e("summary",null,[s[6]||(s[6]=e("a",{id:"Cubiomes.Noises.Noise",href:"#Cubiomes.Noises.Noise"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.Noise")],-1)),s[7]||(s[7]=i()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[8]||(s[8]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Noise</span></span></code></pre></div><p>The abstract type for a Noise sampler.</p><p><strong>Methods</strong></p><ul><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_noise"><code>sample_noise</code></a></p></li><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.set_rng!ðŸŽ²"><code>set_rng!ðŸŽ²</code></a></p></li><li><p><code>Noise(::Type{Noise}, ::UndefInitializer, ...)</code></p></li><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T&lt;:Cubiomes.Noises.Noise, N}"><code>NoiseðŸŽ²</code></a></p></li><li><p><a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.is_undef"><code>is_undef</code></a></p></li></ul><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Perlin"><code>Perlin</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Octaves"><code>Octaves</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.DoublePerlin"><code>DoublePerlin</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/interface.jl#L3-L16" target="_blank" rel="noreferrer">source</a></p>',6))]),e("details",m,[e("summary",null,[s[9]||(s[9]=e("a",{id:"Cubiomes.Noises.Noise-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, UndefInitializer, Vararg{Any, N}}} where {T<:Cubiomes.Noises.Noise, N}",href:"#Cubiomes.Noises.Noise-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, UndefInitializer, Vararg{Any, N}}} where {T<:Cubiomes.Noises.Noise, N}"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.Noise")],-1)),s[10]||(s[10]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UndefInitializer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{DoublePerlin}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UndefInitializer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, amplitudes)</span></span></code></pre></div><p>Create a noise of type <code>T</code> with an undefined state, i.e., it is not initialized yet. Use <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.set_rng!ðŸŽ²"><code>set_rng!ðŸŽ²</code></a> or <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.unsafe_set_rng!ðŸŽ²"><code>unsafe_set_rng!ðŸŽ²</code></a> to initialize it.</p><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T&lt;:Cubiomes.Noises.Noise, N}"><code>NoiseðŸŽ²</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.set_rng!ðŸŽ²"><code>set_rng!ðŸŽ²</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.unsafe_set_rng!ðŸŽ²"><code>unsafe_set_rng!ðŸŽ²</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/interface.jl#L79-L87" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",b,[e("summary",null,[s[12]||(s[12]=e("a",{id:"Cubiomes.Noises.Octaves",href:"#Cubiomes.Noises.Octaves"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.Octaves")],-1)),s[13]||(s[13]=i()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[14]||(s[14]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Octaves{N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Noise</span></span></code></pre></div><p>An ordered collection of <code>N</code> Perlin objects representing the octaves of a noise.</p><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Noise"><code>Noise</code></a>, [<code>sample_noise</code>], <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Perlin"><code>Perlin</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.DoublePerlin"><code>DoublePerlin</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/octaves.jl#L7-L13" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",g,[e("summary",null,[s[15]||(s[15]=e("a",{id:"Cubiomes.Noises.Perlin",href:"#Cubiomes.Noises.Perlin"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.Perlin")],-1)),s[16]||(s[16]=i()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[17]||(s[17]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Perlin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Noise</span></span></code></pre></div><p>The type for the perlin noise. See <a href="https://en.wikipedia.org/Perlin_Noise" target="_blank" rel="noreferrer">https://en.wikipedia.org/Perlin_Noise</a> to know how it works.</p><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Noise"><code>Noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_noise"><code>sample_noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_simplex"><code>sample_simplex</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L73-L79" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",c,[e("summary",null,[s[18]||(s[18]=e("a",{id:"Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T<:Cubiomes.Noises.Noise, N}",href:"#Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T<:Cubiomes.Noises.Noise, N}"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.NoiseðŸŽ²")],-1)),s[19]||(s[19]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[20]||(s[20]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoiseðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {N, T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Create a noise of type <code>T</code> and initialize it with the given random number generator <code>rng</code>. Other arguments are used to initialize the noise. They depend on the noise type and they are the same as the arguments of the <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.set_rng!ðŸŽ²"><code>set_rng!ðŸŽ²</code></a> function.</p><p>Strictly equivalent to</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> noise </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T, undef) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or Noise(T, undef, args[1]) for DoublePerlin</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> set_rng!ðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise, rng, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`.</span></span></code></pre></div><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Noise"><code>Noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.set_rng!ðŸŽ²"><code>set_rng!ðŸŽ²</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/interface.jl#L91-L106" target="_blank" rel="noreferrer">source</a></p>`,6))]),e("details",T,[e("summary",null,[s[21]||(s[21]=e("a",{id:"Cubiomes.Noises.is_undef",href:"#Cubiomes.Noises.is_undef"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.is_undef")],-1)),s[22]||(s[22]=i()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_undef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if the noise is undefined, i.e., it has not been initialized yet.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/interface.jl#L113-L117" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",C,[e("summary",null,[s[24]||(s[24]=e("a",{id:"Cubiomes.Noises.sample_noise",href:"#Cubiomes.Noises.sample_noise"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.sample_noise")],-1)),s[25]||(s[25]=i()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[26]||(s[26]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample_noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Perlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, z, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, yamp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ymin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample_noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Octaves</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, z, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, yamp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ymin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample_noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DoublePerlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, z, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [move_factor,])</span></span></code></pre></div><p>Sample the given noise at the specified coordinates.</p><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_simplex"><code>sample_simplex</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Noise"><code>Noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T&lt;:Cubiomes.Noises.Noise, N}"><code>NoiseðŸŽ²</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/interface.jl#L27-L35" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",y,[e("summary",null,[s[27]||(s[27]=e("a",{id:"Cubiomes.Noises.sample_simplex",href:"#Cubiomes.Noises.sample_simplex"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.sample_simplex")],-1)),s[28]||(s[28]=i()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[29]||(s[29]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample_simplex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Perlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, y)</span></span></code></pre></div><p>Sample the given noise at the given coordinate using the simplex noise algorithm instead of the perlin one. See <a href="https://en.wikipedia.org/wiki/Simplex_noise" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/Simplex_noise</a></p><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_noise"><code>sample_noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Perlin"><code>Perlin</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L343-L350" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",N,[e("summary",null,[s[30]||(s[30]=e("a",{id:"Cubiomes.Noises.set_rng!ðŸŽ²",href:"#Cubiomes.Noises.set_rng!ðŸŽ²"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.set_rng!ðŸŽ²")],-1)),s[31]||(s[31]=i()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[32]||(s[32]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_rng!ðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Perlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rng)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_rng!ðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Octaves{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, octave_min) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_rng!ðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Octaves{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaXoroshiro128PlusPlus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, amplitudes, octave_min) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_rng!ðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DoublePerlin{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rng, octave_min) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_rng!ðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DoublePerlin{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rng, amplitudes, octave_min) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N</span></span></code></pre></div><p>\` Initialize the noise in place with the given random number generator (of type AbstractJavaRNG).</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p><code>N</code> represents the number of octaves, each associated with a non-zero amplitude. Therefore, <code>N</code> <strong>MUST</strong> be equal to the number of non-zero values in amplitudes. This number can be obtained with <code>Cubiomes.length_filter(!iszero, amplitudes)</code>. For performance reasons, it is possible to lower <code>N</code> and completely ignore the last amplitudes using <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.unsafe_set_rng!ðŸŽ²"><code>unsafe_set_rng!ðŸŽ²</code></a>.</p></div><div class="tip custom-block"><p class="custom-block-title">Tip</p><p>Since the last amplitudes are ignored if they are set to zero, replace the tuple of amplitudes with the trimmed version without the last zeros can save a very small amount of memory / time. However, only do this if the trimmed amplitudes are already known. Computing them only for this function call will not save any time.</p></div><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.unsafe_set_rng!ðŸŽ²"><code>unsafe_set_rng!ðŸŽ²</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Noise"><code>Noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T&lt;:Cubiomes.Noises.Noise, N}"><code>NoiseðŸŽ²</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/interface.jl#L42-L65" target="_blank" rel="noreferrer">source</a></p>`,6))]),e("details",f,[e("summary",null,[s[33]||(s[33]=e("a",{id:"Cubiomes.Noises.unsafe_set_rng!ðŸŽ²",href:"#Cubiomes.Noises.unsafe_set_rng!ðŸŽ²"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.unsafe_set_rng!ðŸŽ²")],-1)),s[34]||(s[34]=i()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unsafe_set_rng!ðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise, rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaXoroshiro128PlusPlus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, amplitudes, octave_min)</span></span></code></pre></div><p>Same as <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.set_rng!ðŸŽ²"><code>set_rng!ðŸŽ²</code></a> but allows to skip some octaves for performance reasons, i.e. <code>N</code> can be less than the number of non-zero values in <code>amplitudes</code>, and the last octaves are completely ignored. If instead <code>N</code> is greater, the behavior is undefined.</p><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.set_rng!ðŸŽ²"><code>set_rng!ðŸŽ²</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Noise"><code>Noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.NoiseðŸŽ²-Union{Tuple{N}, Tuple{T}, Tuple{Type{T}, Cubiomes.JavaRNG.AbstractJavaRNG, Vararg{Any, N}}} where {T&lt;:Cubiomes.Noises.Noise, N}"><code>NoiseðŸŽ²</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/interface.jl#L68-L76" target="_blank" rel="noreferrer">source</a></p>',4))]),s[70]||(s[70]=e("h2",{id:"Private-API",tabindex:"-1"},[i("Private API "),e("a",{class:"header-anchor",href:"#Private-API","aria-label":'Permalink to "Private API {#Private-API}"'},"â€‹")],-1)),e("details",E,[e("summary",null,[s[36]||(s[36]=e("a",{id:"Cubiomes.Noises.indexed_lerp-Tuple{Integer, Any, Any, Any}",href:"#Cubiomes.Noises.indexed_lerp-Tuple{Integer, Any, Any, Any}"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.indexed_lerp")],-1)),s[37]||(s[37]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[38]||(s[38]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">indexed_lerp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(idx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, y, z)</span></span></code></pre></div><p>Use the lower 4 bits of <code>idx</code> as a simple hash to combine the <code>x</code>, <code>y</code>, and <code>z</code> values into a single number (a new index), to be used in the Perlin noise interpolation.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L175-L180" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",_,[e("summary",null,[s[39]||(s[39]=e("a",{id:"Cubiomes.Noises.init_coord_values-Tuple{Any}",href:"#Cubiomes.Noises.init_coord_values-Tuple{Any}"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.init_coord_values")],-1)),s[40]||(s[40]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[41]||(s[41]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">init_coord_values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(coord)</span></span></code></pre></div><p>Initialize one coordinate for the Perlin noise sampling.</p><p><strong>Returns:</strong></p><ul><li><p>the fractional part of <code>coord</code></p></li><li><p>the integer part of <code>coord</code>, modulo UInt8</p></li><li><p>the smoothstep value of the fractional part of <code>coord</code></p></li></ul><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.smoothstep_perlin_unsafe-Tuple{Any}"><code>smoothstep_perlin_unsafe</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_noise"><code>sample_noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Perlin"><code>Perlin</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L155-L166" target="_blank" rel="noreferrer">source</a></p>',6))]),e("details",Q,[e("summary",null,[s[42]||(s[42]=e("a",{id:"Cubiomes.Noises.interpolate_perlin-Tuple{OffsetArrays.OffsetVector{UInt8, StaticArraysCore.MVector{257, UInt8}}, Vararg{Any, 9}}",href:"#Cubiomes.Noises.interpolate_perlin-Tuple{OffsetArrays.OffsetVector{UInt8, StaticArraysCore.MVector{257, UInt8}}, Vararg{Any, 9}}"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.interpolate_perlin")],-1)),s[43]||(s[43]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[44]||(s[44]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">interpolate_perlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            idx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PermsType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            d1, d2, d3,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            h1, h2, h3,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            t1, t2, t3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Real</span></span></code></pre></div><p>Interpolate the Perlin noise at the given coordinates.</p><p><strong>Arguments</strong></p><ul><li><p>The <code>idx</code> parameter is the permutations array.</p></li><li><p>The <code>d1</code>, <code>d2</code>, and <code>d3</code> parameters are the fractional parts of the <code>x</code>, <code>y</code>, and <code>z</code></p></li></ul><p>coordinates.</p><ul><li>The <code>h1</code>, <code>h2</code>, and <code>h3</code> parameters are the integer parts of the <code>x</code>, <code>y</code>, and <code>z</code></li></ul><p>coordinates. They <strong>MUST</strong> be between 0 and 255.</p><ul><li>The <code>t1</code>, <code>t2</code>, and <code>t3</code> parameters are the smoothstep values of the fractional parts</li></ul><p>of the <code>x</code>, <code>y</code>, and <code>z</code> coordinates.</p><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.init_coord_values-Tuple{Any}"><code>init_coord_values</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_noise"><code>sample_noise</code></a>, <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.Perlin"><code>Perlin</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L203-L223" target="_blank" rel="noreferrer">source</a></p>`,11))]),e("details",v,[e("summary",null,[s[45]||(s[45]=e("a",{id:"Cubiomes.Noises.next_perlinðŸŽ²",href:"#Cubiomes.Noises.next_perlinðŸŽ²"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.next_perlinðŸŽ²")],-1)),s[46]||(s[46]=i()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[47]||(s[47]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">next_perlinðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{Int32}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stop) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int32</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">next_perlinðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaXoroshiro128PlusPlus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{Int32}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stop) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int3</span></span></code></pre></div><p>Same as <a href="/Cubiomes.jl/dev/api/JavaRNG#Cubiomes.JavaRNG.nextðŸŽ²-Union{Tuple{T}, Tuple{T, Any}} where T&lt;:Cubiomes.JavaRNG.AbstractJavaRNG"><code>nextðŸŽ²</code></a> but with a different implementation specific for the perlin noise. Don&#39;t ask why this is different, it&#39;s just how Minecraft does it.</p><p>See also: <a href="/Cubiomes.jl/dev/api/JavaRNG#Cubiomes.JavaRNG.nextðŸŽ²-Union{Tuple{T}, Tuple{T, Any}} where T&lt;:Cubiomes.JavaRNG.AbstractJavaRNG"><code>nextðŸŽ²</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L13-L21" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",j,[e("summary",null,[s[48]||(s[48]=e("a",{id:"Cubiomes.Noises.shuffle!ðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, OffsetArrays.OffsetVector{UInt8, StaticArraysCore.MVector{257, UInt8}}}",href:"#Cubiomes.Noises.shuffle!ðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, OffsetArrays.OffsetVector{UInt8, StaticArraysCore.MVector{257, UInt8}}}"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.shuffle!ðŸŽ²")],-1)),s[49]||(s[49]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[50]||(s[50]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">shuffle!ðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRNG_MC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, perms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PermsType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Shuffle the permutations array using the given random number generator.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L131-L135" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",F,[e("summary",null,[s[51]||(s[51]=e("a",{id:"Cubiomes.Noises.simplex_gradient-NTuple{5, Any}",href:"#Cubiomes.Noises.simplex_gradient-NTuple{5, Any}"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.simplex_gradient")],-1)),s[52]||(s[52]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[53]||(s[53]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simplex_gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(idx, x, y, z, d)</span></span></code></pre></div><p>Compute the gradient of the simplex noise at the given coordinates.</p><p><strong>Arguments</strong></p><ul><li><p><code>idx</code>: Index used for interpolation.</p></li><li><p><code>x</code>, <code>y</code>, <code>z</code>: Coordinates in the simplex grid.</p></li><li><p><code>d</code>: Constant used to determine the influence of the point in the grid.</p></li></ul><p>See also: <a href="/Cubiomes.jl/dev/api/Noises#Cubiomes.Noises.sample_simplex"><code>sample_simplex</code></a></p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L318-L329" target="_blank" rel="noreferrer">source</a></p>',6))]),e("details",A,[e("summary",null,[s[54]||(s[54]=e("a",{id:"Cubiomes.Noises.smoothstep_perlin_unsafe-Tuple{Any}",href:"#Cubiomes.Noises.smoothstep_perlin_unsafe-Tuple{Any}"},[e("span",{class:"jlbinding"},"Cubiomes.Noises.smoothstep_perlin_unsafe")],-1)),s[55]||(s[55]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[66]||(s[66]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">smoothstep_perlin_unsafe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div>',1)),e("p",null,[s[58]||(s[58]=i("Compute ")),e("mjx-container",x,[(l(),n("svg",P,s[56]||(s[56]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(1730.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2731,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(3731,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(4961.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(5962,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(6962,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),s[57]||(s[57]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mn",null,"6"),e("msup",null,[e("mi",null,"x"),e("mn",null,"5")]),e("mo",null,"âˆ’"),e("mn",null,"15"),e("msup",null,[e("mi",null,"x"),e("mn",null,"4")]),e("mo",null,"+"),e("mn",null,"10"),e("msup",null,[e("mi",null,"x"),e("mn",null,"3")])])],-1))]),s[59]||(s[59]=i(", the smoothstep function used in Perlin noise. See ")),s[60]||(s[60]=e("a",{href:"https://en.wikipedia.org/wiki/Smoothstep#Variations",target:"_blank",rel:"noreferrer"},"https://en.wikipedia.org/wiki/Smoothstep#Variations",-1)),s[61]||(s[61]=i(" for more details."))]),e("p",null,[s[64]||(s[64]=i("This function is unsafe because it is assuming that ")),e("mjx-container",V,[(l(),n("svg",w,s[62]||(s[62]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(777.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1833.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2683.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(3739.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g>',1)]))),s[63]||(s[63]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mn",null,"0"),e("mo",null,"â‰¤"),e("mi",null,"x"),e("mo",null,"â‰¤"),e("mn",null,"1")])],-1))]),s[65]||(s[65]=i(" (it does not clamp the input)."))]),s[67]||(s[67]=e("p",null,[e("a",{href:"https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/noises/perlin.jl#L145-L152",target:"_blank",rel:"noreferrer"},"source")],-1))])])}const O=p(d,[["render",S]]);export{H as __pageData,O as default};
