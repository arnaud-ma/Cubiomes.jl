import{_ as l,C as o,c as r,o as p,j as i,az as a,a as e,G as n}from"./chunks/framework.DBkpLKmB.js";const _=JSON.parse('{"title":"Minecraft Versions","description":"","frontmatter":{},"headers":[],"relativePath":"api/MCVersions.md","filePath":"api/MCVersions.md","lastUpdated":null}'),h={name:"api/MCVersions.md"},d={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""};function g(m,s,b,C,y,E){const t=o("Badge");return p(),r("div",null,[s[12]||(s[12]=i("h1",{id:"Minecraft-Versions",tabindex:"-1"},[e("Minecraft Versions "),i("a",{class:"header-anchor",href:"#Minecraft-Versions","aria-label":'Permalink to "Minecraft Versions {#Minecraft-Versions}"'},"​")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Cubiomes.MCVersions",href:"#Cubiomes.MCVersions"},[i("span",{class:"jlbinding"},"Cubiomes.MCVersions")],-1)),s[1]||(s[1]=e()),n(t,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[2]||(s[2]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MCVersions</span></span></code></pre></div><p>Representation of Minecraft versions in Julia. Works like the built in <code>VersionNumber</code> type but for Minecraft versions, with the <code>mcv&quot;&quot;</code> string macro and the <code>MCVersion</code> abstract type.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/mc_versions.jl#L2-L7" target="_blank" rel="noreferrer">source</a></p>',3))]),s[13]||(s[13]=a('<h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#Cubiomes.MCVersions.MCVersion"><code>Cubiomes.MCVersions.MCVersion</code></a></li><li><a href="#Cubiomes.MCVersions.@mcv_str-Tuple{Any}"><code>Cubiomes.MCVersions.@mcv_str</code></a></li><li><a href="#Cubiomes.MCVersions.@mcvt_str-Tuple{Any}"><code>Cubiomes.MCVersions.@mcvt_str</code></a></li></ul><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2>',3)),i("details",k,[i("summary",null,[s[3]||(s[3]=i("a",{id:"Cubiomes.MCVersions.MCVersion",href:"#Cubiomes.MCVersions.MCVersion"},[i("span",{class:"jlbinding"},"Cubiomes.MCVersions.MCVersion")],-1)),s[4]||(s[4]=e()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MCVersion</span></span></code></pre></div><p>The parent type of every Minecraft version.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/mc_versions.jl#L19-L23" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",c,[i("summary",null,[s[6]||(s[6]=i("a",{id:"Cubiomes.MCVersions.@mcv_str-Tuple{Any}",href:"#Cubiomes.MCVersions.@mcv_str-Tuple{Any}"},[i("span",{class:"jlbinding"},"Cubiomes.MCVersions.@mcv_str")],-1)),s[7]||(s[7]=e()),n(t,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[8]||(s[8]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@mcv_str</span></span></code></pre></div><p>A string macro to get a Minecraft version. For example <code>mcv&quot;1.8.9&quot;</code> represents the 1.8.9 version or <code>mcv&quot;beta1.7&quot;</code> for the beta 1.7.</p><p>!!!warning It does not <em>exactly</em> represents a Minecraft version, but more a close one, where the biome generation is the same. For example, <code>mcv&quot;1.8.6&quot;</code> is exactly equal to <code>mcv&quot;1.8.9</code> since the generation does not change between those two versions.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/mc_versions.jl#L116-L126" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",u,[i("summary",null,[s[9]||(s[9]=i("a",{id:"Cubiomes.MCVersions.@mcvt_str-Tuple{Any}",href:"#Cubiomes.MCVersions.@mcvt_str-Tuple{Any}"},[i("span",{class:"jlbinding"},"Cubiomes.MCVersions.@mcvt_str")],-1)),s[10]||(s[10]=e()),n(t,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[11]||(s[11]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@mcvt_str</span></span></code></pre></div><p>A string macro to get the type representation of one or more (with an Union{}) Minecraft versions. Useful for functions who need to dispatch over specifics versions.</p><p>The syntax is: - <code>mcvt&quot;1.8.9&quot;</code> -&gt; expands to Type{mcv&quot;1.8.9&quot;} - <code>mcvt&quot;&gt;=1.8.9&quot;</code> -&gt; expands to Union{...} on every version &gt;=1.8.9. The supported operations are <code>&lt;, &lt;=, &gt;, &gt;=</code>. - <code>mcvt&quot;1.0.0&lt;=x&lt;=1.8.9</code> -&gt; expands to Union{...} on every version such that 1.0.0&lt;=version&lt;=1.8.9. The place holder <code>x</code> can be anything, can even be empty. The supported operations are <strong>only</strong> <code>&lt;, &lt;=</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> end_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mcvt&quot;&lt;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">end_type (generic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> methods)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> end_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mcvt&quot;1.0.0&lt;=_&lt;1.9.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :old</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">end_type (generic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> methods)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> end_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mcvt&quot;&gt;=1.9.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :new</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">end_type (generic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> methods)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> end_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mcv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.13&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:new</span></span></code></pre></div><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/mc_versions.jl#L162-L189" target="_blank" rel="noreferrer">source</a></p>`,6))]),s[14]||(s[14]=i("h2",{id:"Private-API",tabindex:"-1"},[e("Private API "),i("a",{class:"header-anchor",href:"#Private-API","aria-label":'Permalink to "Private API {#Private-API}"'},"​")],-1))])}const f=l(h,[["render",g]]);export{_ as __pageData,f as default};
