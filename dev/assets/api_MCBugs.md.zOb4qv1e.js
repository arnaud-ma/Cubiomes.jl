import{_ as l,C as o,c as r,o as u,j as a,az as t,a as e,G as n}from"./chunks/framework.DBkpLKmB.js";const y=JSON.parse('{"title":"MCBugs","description":"","frontmatter":{},"headers":[],"relativePath":"api/MCBugs.md","filePath":"api/MCBugs.md","lastUpdated":null}'),p={name:"api/MCBugs.md"},d={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""};function g(k,s,m,C,_,c){const i=o("Badge");return u(),r("div",null,[s[10]||(s[10]=a("h1",{id:"mcbugs",tabindex:"-1"},[e("MCBugs "),a("a",{class:"header-anchor",href:"#mcbugs","aria-label":'Permalink to "MCBugs"'},"​")],-1)),a("details",d,[a("summary",null,[s[0]||(s[0]=a("a",{id:"Cubiomes.MCBugs",href:"#Cubiomes.MCBugs"},[a("span",{class:"jlbinding"},"Cubiomes.MCBugs")],-1)),s[1]||(s[1]=e()),n(i,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[2]||(s[2]=a("p",null,"Utility functions for working with known Minecraft bugs.",-1)),s[3]||(s[3]=a("p",null,[a("a",{href:"https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/mc_bugs.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source")],-1))]),s[11]||(s[11]=t('<h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#Cubiomes.MCBugs.has_bug_mc159283-Tuple{Any, Int64, Int64}"><code>Cubiomes.MCBugs.has_bug_mc159283</code></a></li><li><a href="#Cubiomes.MCBugs.overflow_int32-Tuple{Int64}"><code>Cubiomes.MCBugs.overflow_int32</code></a></li></ul><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h2 id="Private-API" tabindex="-1">Private API <a class="header-anchor" href="#Private-API" aria-label="Permalink to &quot;Private API {#Private-API}&quot;">​</a></h2>',4)),a("details",h,[a("summary",null,[s[4]||(s[4]=a("a",{id:"Cubiomes.MCBugs.has_bug_mc159283-Tuple{Any, Int64, Int64}",href:"#Cubiomes.MCBugs.has_bug_mc159283-Tuple{Any, Int64, Int64}"},[a("span",{class:"jlbinding"},"Cubiomes.MCBugs.has_bug_mc159283")],-1)),s[5]||(s[5]=e()),n(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[6]||(s[6]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_bug_mc159283</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(version</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MCVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>See <a href="https://bugs.mojang.com/browse/MC-159283" target="_blank" rel="noreferrer">MC-159283</a> for more information.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/mc_bugs.jl#L15-L19" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",b,[a("summary",null,[s[7]||(s[7]=a("a",{id:"Cubiomes.MCBugs.overflow_int32-Tuple{Int64}",href:"#Cubiomes.MCBugs.overflow_int32-Tuple{Int64}"},[a("span",{class:"jlbinding"},"Cubiomes.MCBugs.overflow_int32")],-1)),s[8]||(s[8]=e()),n(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[9]||(s[9]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">overflow_int32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns true if the value <code>x</code> overflows when converted to a signed 32-bit integer.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/mc_bugs.jl#L8-L12" target="_blank" rel="noreferrer">source</a></p>',3))])])}const B=l(p,[["render",g]]);export{y as __pageData,B as default};
