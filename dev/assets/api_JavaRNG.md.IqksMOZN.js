import{_ as l,C as r,c as p,o as h,j as s,az as e,a as i,G as n}from"./chunks/framework.DBkpLKmB.js";const R=JSON.parse('{"title":"JavaRNG","description":"","frontmatter":{},"headers":[],"relativePath":"api/JavaRNG.md","filePath":"api/JavaRNG.md","lastUpdated":null}'),o={name:"api/JavaRNG.md"},d={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""};function c(E,a,v,y,C,T){const t=r("Badge");return h(),p("div",null,[a[18]||(a[18]=s("h1",{id:"javarng",tabindex:"-1"},[i("JavaRNG "),s("a",{class:"header-anchor",href:"#javarng","aria-label":'Permalink to "JavaRNG"'},"â€‹")],-1)),s("details",d,[s("summary",null,[a[0]||(a[0]=s("a",{id:"Cubiomes.JavaRNG",href:"#Cubiomes.JavaRNG"},[s("span",{class:"jlbinding"},"Cubiomes.JavaRNG")],-1)),a[1]||(a[1]=i()),n(t,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),a[2]||(a[2]=e('<p>A module that mimics the behavior of Java&#39;s random number generators in Julia. Only the functionalities needed by the Minecraft Java Edition are implemented.</p><p>The rngs implemented are:</p><ul><li><p><a href="/Cubiomes.jl/dev/api/JavaRNG#Cubiomes.JavaRNG.JavaRandom"><code>JavaRandom</code></a> for the <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Random.html" target="_blank" rel="noreferrer"><code>java.util.Random</code></a> class.</p></li><li><p><a href="/Cubiomes.jl/dev/api/JavaRNG#Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus"><code>JavaXoroshiro128PlusPlus</code></a> for the <a href="http://prng.di.unimi.it/xoshiro128plusplus.c" target="_blank" rel="noreferrer"><code>Xoroshiro128PlusPlus</code></a> PRNG.</p></li></ul><p>Only the [<code>nextðŸŽ²</code>] function is used to get random numbers. Instead of <code>nextDouble</code> or <code>nextInt</code> in Java, use <code>nextðŸŽ²(rng, Float64)</code> or <code>nextðŸŽ²(rng, Int32)</code> respectively.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/rng.jl#L2-L12" target="_blank" rel="noreferrer">source</a></p>',5))]),a[19]||(a[19]=e('<h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">â€‹</a></h2><ul><li><a href="#Cubiomes.JavaRNG.JavaRandom"><code>Cubiomes.JavaRNG.JavaRandom</code></a></li><li><a href="#Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus"><code>Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus</code></a></li><li><a href="#Cubiomes.JavaRNG.nextðŸŽ²-Union{Tuple{T}, Tuple{T, Any}} where T&lt;:Cubiomes.JavaRNG.AbstractJavaRNG"><code>Cubiomes.JavaRNG.nextðŸŽ²</code></a></li><li><a href="#Cubiomes.JavaRNG.randjumpðŸŽ²-Union{Tuple{T}, Tuple{T, Any, Integer}} where T&lt;:Cubiomes.JavaRNG.AbstractJavaRNG"><code>Cubiomes.JavaRNG.randjumpðŸŽ²</code></a></li><li><a href="#Cubiomes.JavaRNG.set_seedðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, Any, Vararg{Any}}"><code>Cubiomes.JavaRNG.set_seedðŸŽ²</code></a></li></ul><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">â€‹</a></h2>',3)),s("details",k,[s("summary",null,[a[3]||(a[3]=s("a",{id:"Cubiomes.JavaRNG.JavaRandom",href:"#Cubiomes.JavaRNG.JavaRandom"},[s("span",{class:"jlbinding"},"Cubiomes.JavaRNG.JavaRandom")],-1)),a[4]||(a[4]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),a[5]||(a[5]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A pseudorandom number generator that mimics the behavior of Java&#39;s <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Random.html" target="_blank" rel="noreferrer"><code>java.util.Random</code></a> class.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JavaRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1234</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000005deece2bf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> next_int32_range!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span></code></pre></div><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/rng.jl#L70-L85" target="_blank" rel="noreferrer">source</a></p>`,5))]),s("details",u,[s("summary",null,[a[6]||(a[6]=s("a",{id:"Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus",href:"#Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus"},[s("span",{class:"jlbinding"},"Cubiomes.JavaRNG.JavaXoroshiro128PlusPlus")],-1)),a[7]||(a[7]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),a[8]||(a[8]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaXoroshiro128PlusPlus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UInt64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UInt64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JavaXoroshiro128PlusPlus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A pseudo-random number generator that mimics the behavior of Java&#39;s implementation of <a href="http://prng.di.unimi.it/xoshiro128plusplus.c" target="_blank" rel="noreferrer"><code>Xoroshiro128PlusPlus</code></a> PRNG.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/rng.jl#L174-L180" target="_blank" rel="noreferrer">source</a></p>`,3))]),s("details",g,[s("summary",null,[a[9]||(a[9]=s("a",{id:"Cubiomes.JavaRNG.nextðŸŽ²-Union{Tuple{T}, Tuple{T, Any}} where T<:Cubiomes.JavaRNG.AbstractJavaRNG",href:"#Cubiomes.JavaRNG.nextðŸŽ²-Union{Tuple{T}, Tuple{T, Any}} where T<:Cubiomes.JavaRNG.AbstractJavaRNG"},[s("span",{class:"jlbinding"},"Cubiomes.JavaRNG.nextðŸŽ²")],-1)),a[10]||(a[10]=i()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[11]||(a[11]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nextðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nextðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stop) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nextðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, start, stop) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span></code></pre></div><p>Generate a random number of type <code>T</code> from the given random number generator. If <code>start</code> and <code>stop</code> are provided, the random number will be in the range <code>[start, stop]</code>. <code>start</code> is default to <code>0</code>.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/rng.jl#L23-L30" target="_blank" rel="noreferrer">source</a></p>`,3))]),s("details",b,[s("summary",null,[a[12]||(a[12]=s("a",{id:"Cubiomes.JavaRNG.randjumpðŸŽ²-Union{Tuple{T}, Tuple{T, Any, Integer}} where T<:Cubiomes.JavaRNG.AbstractJavaRNG",href:"#Cubiomes.JavaRNG.randjumpðŸŽ²-Union{Tuple{T}, Tuple{T, Any, Integer}} where T<:Cubiomes.JavaRNG.AbstractJavaRNG"},[s("span",{class:"jlbinding"},"Cubiomes.JavaRNG.randjumpðŸŽ²")],-1)),a[13]||(a[13]=i()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[14]||(a[14]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randjumpðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span></code></pre></div><p>Jump the state of the random number generator <code>n</code> steps forward, without generating any random numbers.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/rng.jl#L33-L38" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",m,[s("summary",null,[a[15]||(a[15]=s("a",{id:"Cubiomes.JavaRNG.set_seedðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, Any, Vararg{Any}}",href:"#Cubiomes.JavaRNG.set_seedðŸŽ²-Tuple{Cubiomes.JavaRNG.AbstractJavaRNG, Any, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Cubiomes.JavaRNG.set_seedðŸŽ²")],-1)),a[16]||(a[16]=i()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[17]||(a[17]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_seedðŸŽ²</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJavaRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, seed) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractJavaRNG</span></span></code></pre></div><p>Initialize the rng with the given seed. Return the rng itself for convenience.</p><p><a href="https://github.com/arnaud-ma/Cubiomes.jl/blob/10be951b0da79a3a421b38572784af9f95a04b04/src/rng.jl#L43-L47" target="_blank" rel="noreferrer">source</a></p>',3))]),a[20]||(a[20]=s("h2",{id:"Private-API",tabindex:"-1"},[i("Private API "),s("a",{class:"header-anchor",href:"#Private-API","aria-label":'Permalink to "Private API {#Private-API}"'},"â€‹")],-1))])}const _=l(o,[["render",c]]);export{R as __pageData,_ as default};
