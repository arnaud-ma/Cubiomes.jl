using Cubiomes
using Test

@testset "Perlin" begin
    #!format: off
    perlin_test = Cubiomes.Perlin(
        UInt8[
            60 , 68 , 186, 196, 229, 34 , 245, 127, 142, 65 , 223, 42 , 194, 252, 38 , 61 ,
            180, 14 , 172, 26 , 17 , 81 , 45 , 16 , 70 , 156, 110, 247, 116, 149, 157, 205,
            109, 99 , 131, 163, 97 , 243, 251, 150, 141, 75 , 235, 165, 224, 67 , 232, 98 ,
            44 , 84 , 138, 164, 160, 154, 5  , 214, 117, 106, 20 , 212, 162, 23 , 85 , 209,
            213, 241, 179, 139, 9  , 77 , 126, 195, 169, 206, 27 , 140, 83 , 135, 119, 208,
            151, 37 , 114, 71 , 74 , 128, 147, 254, 108, 170, 188, 29 , 54 , 222, 148, 193,
            63 , 90 , 33 , 210, 96 , 221, 115, 69 , 161, 118, 107, 111, 175, 102, 199, 237,
            8  , 167, 183, 230, 48 , 55 , 215, 73 , 152, 2  , 168, 105, 7  , 0  , 143, 187,
            47 , 46 , 124, 171, 52 , 76 , 49 , 79 , 182, 129, 91 , 189, 176, 153, 136, 31 ,
            122, 121, 25 , 13 , 211, 15 , 93 , 123, 57 , 219, 36 , 174, 62 , 184, 101, 217,
            40 , 234, 198, 59 , 51 , 134, 158, 87 , 112, 190, 125, 104, 32 , 185, 6  , 216,
            202, 35 , 197, 191, 204, 120, 246, 173, 178, 103, 253, 53 , 203, 64 , 181, 159,
            80 , 228, 231, 132, 12 , 113, 43 , 137, 24 , 95 , 218, 4  , 28 , 236, 250, 238,
            89 , 242, 249, 22 , 3  , 220, 130, 19 , 18 , 248, 146, 244, 50 , 166, 30 , 11 ,
            144, 177, 41 , 145, 21 , 233, 201, 225, 227, 226, 88 , 78 , 200, 207, 82 , 10 ,
            192, 58 , 56 , 240, 86 , 255, 92 , 239, 100, 39 , 155, 66 , 94 , 1  , 72 , 133,
            60],
        0.963179403809562,
        235.71618854778376,
        105.5002996428237,
        0.7161885477837586,
        0xeb,
        0.8576664228438532,
        1.0,
        1.0,
    )

    seed = UInt64(64)
    rng = Cubiomes.JavaRandom(seed)
    perlin = Cubiomes.Noise(Cubiomes.Perlin, undef)
    Cubiomes.set_rng!🎲(perlin, rng)
    @test perlin == perlin_test
end